Notes on C Language:

To create programs you need a compiler, linker, and text editor
The code you write is called source code, saved with the .c file extension
The source code is compiled into object code, using the compiler and ends with the .o file extension and has the same name as its corresponding source code
The linker then combines the object code with a C library file
The end result is a program file
The process is:
Edit
Compile
Test run
Functions are held in C libraries and defined in separate header files
Variables are containers for values
Types of comments: //  /**/
Printf() function is similar to puts() except that printf() does not auto-include a newline character \n
\n newline
\t tab
\’ single quote
\” double quote
\\
Placeholders can be used inside strings. Some example of placeholders are:
%d integers
%s strings
%f floating points
%c single character
%% percent sign
You can also use variables for placeholders
In C language, single characters are specified with single quotes when referencing them using placeholders
Ex: ’C’
The single quotes returns the numerical ASCII value for the letter
Adding a 1 to ‘C’ will return the next letter in the ASCII table
C variables
Int
Char
Float
Double
Long
Short
Signed can represent both positive and negative
Unsigned can only represent positive
Stream output is buffered. The cpu waits until the buffer is flushed/the program closes.
Pointers
Ex: &a is used to reference the address space for variable a

Using Xcode preferences:
Use CMD+I to edit Instruments and add profilers to test run time

Using Git on Xcode:
When committing on your local repository, select the ‘flat’ option to view a side by side pane of your commit changes.
You can uncheck a specific change to exclude it from a commit
You can discard changes you made via Git using the Source Control option
If you choose to discard changes made to a file, Git will restore the last committed version of the file and only the last. And that’s actually where the limitation lies.
This allows you to compare two revisions of the selected file and works exactly like the comparison view in the Commit window. By default, your current source file is shown on the left and the most recent revision stored in the repository – Git calls this the HEAD – is shown on the right.
To display earlier versions from your repository, click on the clock icon at the bottom of the right pane (marked in red below) and select an earlier revision.
Now, to revert to that file version, just click the arrow next to the change number in the comparison pane and select Discard Change. It’s that easy!
Once you finish reverting to an earlier version, you will need to commit this “new” version of the file as the most recent.
The hierarchy for commits is first to last, bottom to top (head). The most recent commit Is at the top
Instead of clicking the Commit 3 Files button, click Cancel instead. Switch to the Source Control navigator and click the gear icon in the lower left corner. Select Branch from “master”….
Creating a new branch is a good way of testing changes being made to a parent branch and being able to easily revert back to it later on.
it is good practice to do all of your development on a branch other than the master branch


https://www.raywenderlich.com/153084/use-git-source-control-xcode-9
